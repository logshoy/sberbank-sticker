{"version":3,"sources":["store/actions/todos.js","store/actions/actionTypes.js","components/TodoItem/TodoCheckboxText.js","svg/BinDelete.js","store/actions/modal.js","TodoItem.js","TodoList.js","pages/Main.js","pages/EditPost.js","components/Modal/DeletePostModal.js","TodoCreate.js","components/Modal/ChangeTodoModal.js","components/Modal/Modal.js","App.js","store/reducers/todos.js","store/reducers/modal.js","store/reducers/rootReducer.js","serviceWorker.js","index.js"],"names":["localstorageGet","localTodos","type","addTodoItem","todosTitle","todosList","dispatch","addTodoItems","localSet","checkItem","todoId","todoIndex","id","index","removeTodoItem","removeTodoItems","changeById","title","changeByIds","connect","props","cls","completed","push","className","join","checked","onChange","name","BinReact","height","size","viewBox","width","xmlns","fill","d","showModal","modalType","modalProps","state","todosArray","todos","to","onClick","deleteType","map","item","key","TodoList","todoTitle","modalData","modal","newArray","reverse","EditPost","setState","arr","handleChange","e","newState","target","value","handleRemove","splice","setTimeout","todoById","match","params","event","this","history","handleChangeTitle","todo","placeholder","React","Component","byId","hideModal","useHistory","useState","setTodosTitle","addTodos","onKeyPress","useRef","handleKeyUp","useCallback","keys","27","preventDefault","window","removeEventListener","keyCode","handleOutsideClick","current","contains","document","useEffect","addEventListener","ref","localStorage","getItem","Array","from","JSON","parse","path","exact","component","Main","initialState","combineReducers","action","filter","element","Number","Date","now","itemCheck","console","log","setItem","stringify","Boolean","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","basename","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sPAUO,SAASA,EAAgBC,GAC9B,MAAO,CACLC,KCV4B,mBDW5BD,cAWG,SAASE,EAAYC,EAAYC,GACtC,OAAO,SAAAC,GACLA,EAKJ,SAAsBF,EAAYC,GAChC,MAAO,CACLH,KCjCyB,gBDkCzBE,aACAC,aATSE,CAAaH,EAAYC,IAClCC,EAASE,MAYN,SAASC,EAAUC,EAAQC,GAChC,OAAO,SAAAL,GACLA,EAMK,CACLJ,KC5CsB,aD6CtBU,GARoBF,EASpBG,MAT4BF,IAC5BL,EAASE,MAYN,SAASM,EAAeF,GAC7B,OAAO,SAAAN,GACLA,EAKJ,SAAyBM,GACvB,MAAO,CACLV,KC9D4B,mBD+D5BU,MARSG,CAAgBH,IACzBN,EAASE,MAWN,SAASQ,EAAWJ,EAAIK,EAAOZ,GACpC,OAAO,SAAAC,GACLA,EAKJ,SAAqBM,EAAIK,EAAOZ,GAC9B,MAAO,CACLH,KCrEwB,eDsExBU,KACAK,QACAZ,aAVSa,CAAYN,EAAIK,EAAOZ,IAChCC,EAASE,MAab,SAASA,IACP,MAAO,CACLN,KCnF4B,oBC4BjBiB,kBAAQ,MANvB,SAA2Bb,GACzB,MAAO,CACLG,UAAW,SAACC,EAAQC,GAAT,OAAuBL,EAASG,EAAUC,EAAQC,QAIlDQ,EA3Bf,SAA0BC,GACxB,IAAMC,EAAM,CAAC,aAKb,OAJID,EAAME,WACRD,EAAIE,KAAK,aAIT,yBAAKC,UAAWH,EAAII,KAAK,MACvB,+BACE,2BACEvB,KAAK,WACLwB,QAASN,EAAME,UACfK,SAAU,kBAAMP,EAAMX,UAAUW,EAAMR,GAAIQ,EAAMP,UAElD,+BAEF,8BAAOO,EAAMQ,UClBJ,SAASC,EAAST,GAC/B,OACE,yBAAKI,UAAU,OACb,yBACEZ,GAAG,QACHkB,OAAQV,EAAMW,KACdC,QAAQ,YACRC,MAAOb,EAAMW,KACbG,MAAM,8BAEN,0BACEC,KAAK,MACLC,EAAE,iQAEJ,0BACED,KAAK,MACLC,EAAE,4SAEJ,0BACED,KAAK,MACLC,EAAE,8NAEJ,0BACED,KAAK,MACLC,EAAE,kIAEJ,0BACED,KAAK,MACLC,EAAE,wEAEJ,0BACED,KAAK,MACLC,EAAE,wI,YChCL,SAASC,EAAUC,EAAWC,GACnC,MAAO,CACLrC,KHCsB,aGAtBoC,YACAC,cCsDWpB,mBAhBf,SAAyBqB,GACvB,MAAO,CACLC,WAAYD,EAAME,MAAMD,eAI5B,SAA2BnC,GACzB,MAAO,CACLQ,eAAgB,SAAAF,GAAE,OAAIN,EAASQ,EAAeF,KAC9CH,UAAW,SAACC,EAAQC,GAAT,OAAuBL,EAASG,EAAUC,EAAQC,KAC7D0B,UAAW,SAACC,EAAWC,GACrBjC,EAAS+B,EAAUC,EAAWC,QAKrBpB,EApDf,SAAkBC,GAChB,OACE,wBAAII,UAAU,YACZ,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,mBAAmBJ,EAAMH,OACxC,yBAAKO,UAAU,qBACb,kBAAC,IAAD,CAAMA,UAAU,mBAAmBmB,GAAI,SAAWvB,EAAMR,KACxD,yBACEgC,QAAS,WACPxB,EAAMiB,UAAU,cAAe,CAC7BzB,GAAIQ,EAAMR,GACViC,WAAY,WAIhB,kBAAC,EAAD,CAAWd,KAAK,UAIrBX,EAAMf,UAAUyC,KAAI,SAACC,EAAMlC,GAC1B,OACE,oCACE,kBAAC,EAAD,CACEmC,IAAKnC,EACLD,GAAIQ,EAAMR,GACVC,MAAOA,EACPS,UAAWyB,EAAKzB,UAChBM,KAAMmB,EAAKnB,eChCV,SAASqB,EAAT,GAA8B,IAAVP,EAAS,EAATA,MACjC,OACE,4BACGA,EAAMI,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,eAAUC,IAAKD,EAAKnC,IAAQmC,QCiCrB5B,mBAhBf,SAAyBqB,GACvB,MAAO,CACLC,WAAYD,EAAME,MAAMD,WACxBS,UAAWV,EAAME,MAAMQ,UACvBC,UAAWX,EAAMY,UAIrB,SAA2B9C,GACzB,MAAO,CACLN,gBAAiB,SAAA0C,GAAK,OAAIpC,EAASN,EAAgB0C,KACnDL,UAAW,SAACC,EAAWC,GACrBjC,EAAS+B,EAAUC,EAAWC,QAIrBpB,EAlCf,SAAcC,GACZ,IAAMiC,EAAQ,YAAOjC,EAAMqB,YAE3B,OACE,yBAAKjB,UAAU,aACb,gPACA,4BACEA,UAAU,SACVoB,QAAS,kBAAMxB,EAAMiB,UAAU,sBAFjC,yFAMA,oGACA,kBAACY,EAAD,CAAUP,MAAOW,EAASC,gB,gCCZ1BC,E,kDACJ,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IAuBRjB,YAAc,WACZ,EAAKqD,SAAS,CACZC,IAAI,GAAD,mBACE,EAAKjB,MAAMiB,KADb,CAED,CACE7B,KAAM,GACNN,WAAW,QA9BA,EAoCnBoC,aAAe,SAACC,EAAG9C,GACjB,IAAM+C,EAAW,EAAKpB,MAAMiB,IAC5BG,EAAS/C,GAAOe,KAAO+B,EAAEE,OAAOC,MAChC,EAAKN,SAAS,CACZC,IAAKG,KAxCU,EA4CnBG,aAAe,SAAAlD,GACb,EAAK2B,MAAMiB,IAAIO,OAAOnD,EAAO,GAC7B,EAAK2C,SAAS,CACZC,IAAI,YAAK,EAAKjB,MAAMiB,QA/CL,EAmDnBhD,UAAY,SAACa,EAAWT,GACtB,IAAM+C,EAAW,EAAKpB,MAAMiB,IAC5BG,EAAS/C,GAAOS,WAAaA,EAC7B,EAAKkC,SAAS,CACZC,IAAKG,KArDP,EAAKpB,MAAQ,CACXU,UAAW,GACXO,IAAK,IAJU,E,gEAQE,IAAD,OAClBQ,YAAW,WACT,EAAK7C,MAAM8C,SAAS,EAAK9C,MAAM+C,MAAMC,OAAOxD,IAC5C,EAAK4C,SAAS,CACZN,UAAW,EAAK9B,MAAMV,OAAOO,MAC7BwC,IAAK,EAAKrC,MAAMV,OAAOL,iB,wCAKXgE,GAChBC,KAAKd,SAAS,CACZN,UAAWmB,EAAMR,OAAOC,U,mCAwC1BQ,KAAKlD,MAAMJ,WACTsD,KAAKlD,MAAMV,OAAOE,GAClB0D,KAAK9B,MAAMU,UACXoB,KAAK9B,MAAMiB,KAEba,KAAKlD,MAAMmD,QAAQhD,KAAK,O,+BAGhB,IAAD,OACP,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAMmB,GAAG,KAAT,UACA,2HACA,+BAEF,2BACEzC,KAAK,OACL4D,MAAOQ,KAAK9B,MAAMU,UAClBvB,SAAU,SAAAgC,GAAC,OAAI,EAAKa,kBAAkBb,MAEvCW,KAAK9B,MAAMiB,IAAIX,KAAI,SAAC2B,EAAM5D,GACzB,IAAMQ,EAAM,CAAC,aAIb,OAHIoD,EAAKnD,WACPD,EAAIE,KAAK,aAGT,yBAAKC,UAAWH,EAAII,KAAK,KAAMuB,IAAKnC,GAClC,+BACE,2BACEX,KAAK,WACLwB,QAAS+C,EAAKnD,UACdK,SAAU,kBAAM,EAAKlB,UAAUgE,EAAKnD,UAAWT,MAEjD,+BAEF,2BACEX,KAAK,OACLwE,YAAY,OACZ/C,SAAU,SAAAgC,GAAC,OAAI,EAAKD,aAAaC,EAAG9C,IACpCiD,MAAOW,EAAK7C,OAEd,4BACEJ,UAAU,iBACVoB,QAAS,kBAAM,EAAKmB,aAAalD,KAFnC,YASN,yBAAKW,UAAU,cACb,4BAAQA,UAAU,aAAaoB,QAAS0B,KAAKnE,aAA7C,MAIF,yBAAKqB,UAAU,WACb,4BACEA,UAAU,SACVoB,QAAS,WACP,EAAKxB,MAAMiB,UAAU,cAAe,CAClCzB,GAAI,EAAKQ,MAAMV,OAAOE,GACtBK,MAAO,EAAKuB,MAAMU,UAClB7C,UAAW,EAAKmC,MAAMiB,QAN5B,0DAYA,kBAAC,IAAD,CAAMjC,UAAU,SAASmB,GAAG,KAA5B,wCAGA,yBACEC,QAAS,WACP,EAAKxB,MAAMiB,UAAU,cAAe,CAClCzB,GAAI,EAAKQ,MAAMV,OAAOE,GACtBiC,WAAY,WAIhB,kBAAC,EAAD,CAAWd,KAAK,c,GA7IL4C,IAAMC,WAuKdzD,mBAlBf,SAAyBqB,GACvB,MAAO,CACL9B,OAAQ8B,EAAME,MAAM+B,SAIxB,SAA2BnE,GACzB,MAAO,CACL4D,SAAU,SAAAtD,GAAE,OAAIN,ERlJX,CACLJ,KCZsB,aDatB2E,KQgJkCjE,KAClCI,WAAY,SAACJ,EAAIK,EAAOZ,GACtBC,EAASU,EAAWJ,EAAIK,EAAOZ,KAEjCgC,UAAW,SAACC,EAAWC,GACrBjC,EAAS+B,EAAUC,EAAWC,QAKrBpB,CAA4CoC,G,OCxI5CpC,kBAAQ,MAPvB,SAA2Bb,GACzB,MAAO,CACLQ,eAAgB,SAAAF,GAAE,OAAIN,EAASQ,EAAeF,KAC9CkE,UAAW,kBAAMxE,ELvBZ,CACLJ,KHNsB,mBQgCXiB,EAhCf,SAAyBC,GACvB,IAAMmD,EAAUQ,cAShB,OACE,6BACE,0QACA,yBAAKvD,UAAU,WACb,4BAAQA,UAAU,SAASoB,QAZd,WACjBxB,EAAMN,eAAeM,EAAMmB,WAAW3B,IACtCQ,EAAM0D,YAC8B,SAAhC1D,EAAMmB,WAAWM,YACnB0B,EAAQhD,KAAK,OAQX,gBAGA,4BAAQC,UAAU,SAASoB,QAASxB,EAAM0D,WAA1C,2B,QCqGO3D,mBAff,SAAyBqB,GACvB,MAAO,CACLU,UAAWV,EAAME,MAAMQ,cAI3B,SAA2B5C,GACzB,MAAO,CACLH,YAAa,SAACC,EAAYC,GACxBC,EAASH,EAAYC,EAAYC,KAEnCyE,UAAW,kBAAMxE,EN7GZ,CACLJ,KHNsB,mBSsHXiB,EAvHf,SAAoBC,GAAQ,IAAD,EACW4D,mBAAS,CAAC,KADrB,mBAClB5E,EADkB,KACN6E,EADM,OAECD,mBAAS,CACjC,CACEpD,KAAM,GACNN,WAAW,KALU,mBAElBoB,EAFkB,KAEXwC,EAFW,KAgDzB,OACE,yBAAK1D,UAAU,eACb,qHACA,6BACE,2BACEtB,KAAK,OACLwE,YAAY,8FACZZ,MAAO1D,EACPuB,SAAU,SAAA0C,GAAK,OAAIY,EAAcZ,EAAMR,OAAOC,QAC9CqB,WAhDQ,SAAAd,GACI,UAAdA,EAAMrB,MACR5B,EAAMjB,YAAYC,EAAYsC,GAC9BwC,EAAS,IACT9D,EAAM0D,iBA+CLpC,EAAMI,KAAI,SAAC2B,EAAM5D,GAChB,IAAMQ,EAAM,CAAC,aAIb,OAHIoD,EAAKnD,WACPD,EAAIE,KAAK,aAGT,yBAAKC,UAAWH,EAAII,KAAK,KAAMuB,IAAKnC,GAClC,+BACE,2BACEX,KAAK,WACLwB,QAAS+C,EAAKnD,UACdK,SAAU,kBAvCN,SAACL,EAAWT,GAC5B6B,EAAM7B,GAAOS,WAAaA,EAC1B4D,EAAS,YAAIxC,IAqCejC,CAAUgE,EAAKnD,UAAWT,MAE5C,+BAEF,2BACEX,KAAK,OACLwE,YAAY,6CACZ/C,SAAU,SAAAgC,GAAC,OAnDF,SAACA,EAAG9C,GACvB6B,EAAM7B,GAAOe,KAAO+B,EAAEE,OAAOC,MAC7BoB,EAAS,YAAIxC,IAiDYgB,CAAaC,EAAG9C,IAC/BiD,MAAOW,EAAK7C,OAEd,4BAAQJ,UAAU,iBAAiBoB,QAAS,SAAAe,GAAC,OA5ClC,SAAA9C,GACnB6B,EAAMsB,OAAOnD,EAAO,GACpBqE,EAAS,YAAIxC,IA0C4CqB,CAAaJ,KAA9D,YAMN,yBAAKnC,UAAU,cACb,4BAAQA,UAAU,aAAaoB,QAvEb,WACtBsC,EAAS,GAAD,mBACHxC,GADG,CAEN,CACEd,KAAM,GACNN,WAAW,QAkEX,MAIF,yBAAKE,UAAU,WACb,4BAAQA,UAAU,SAASoB,QAnDb,WAClBxB,EAAMjB,YAAYC,EAAYsC,GAC9BwC,EAAS,IACT9D,EAAM0D,cAgDF,0DAGA,4BAAQtD,UAAU,SAASoB,QAASxB,EAAM0D,WAA1C,mDC1DO3D,kBAAQ,MATvB,SAA2Bb,GACzB,MAAO,CACLU,WAAY,SAACJ,EAAIK,EAAOZ,GACtBC,EAASU,EAAWJ,EAAIK,EAAOZ,KAEjCyE,UAAW,kBAAMxE,EP5BZ,CACLJ,KHNsB,mBUqCXiB,EArCf,SAAyBC,GACvB,IAAMmD,EAAUQ,cAYhB,OACE,6BACE,gRACA,yBAAKvD,UAAU,WACb,4BAAQA,UAAU,SAASoB,QAdT,WACtBxB,EAAMJ,WACJI,EAAMmB,WAAW3B,GACjBQ,EAAMmB,WAAWtB,MACjBG,EAAMmB,WAAWlC,WAEnBe,EAAM0D,YACNP,EAAQhD,KAAK,OAOT,gBAGA,4BAAQC,UAAU,SAASoB,QAASxB,EAAM0D,WAA1C,2BC2DO3D,mBAZf,SAAyBqB,GACvB,MAAO,CACLW,UAAWX,EAAMY,UAIrB,SAA2B9C,GACzB,MAAO,CACLwE,UAAW,kBAAMxE,ERtEZ,CACLJ,KHNsB,mBW+EXiB,EA9ED,SAAAC,GACZ,IAAMgC,EAAQgC,iBAAO,MAEfC,EAAcC,uBAClB,SAAA3B,GACE,IAAM4B,EAAO,CACXC,GAAI,WACF7B,EAAE8B,iBACFrE,EAAM0D,YACNY,OAAOC,oBAAoB,QAASN,GAAa,KAIjDE,EAAK5B,EAAEiC,UACTL,EAAK5B,EAAEiC,aAGX,CAACxE,IAGGyE,EAAqBP,uBACzB,SAAA3B,GACMP,IACGA,EAAM0C,QAAQC,SAASpC,EAAEE,UAC5BzC,EAAM0D,YACNkB,SAASL,oBAAoB,QAASE,GAAoB,OAIhE,CAACzE,IAGH6E,qBAAU,WAIR,OAHAP,OAAOQ,iBAAiB,QAASb,GAAa,GAC9CW,SAASE,iBAAiB,QAASL,GAAoB,GAEhD,WACLH,OAAOC,oBAAoB,QAASN,GAAa,GACjDW,SAASL,oBAAoB,QAASE,GAAoB,MAE3D,CAACR,EAAaQ,IAYjB,OACE,yBAAKrE,UAAU,mBACb,yBAAKA,UAAU,gBAAgB2E,IAAK/C,GAClC,4BACElD,KAAK,SACLsB,UAAU,cACVoB,QAASxB,EAAM0D,YAfa,gBAA9B1D,EAAM+B,UAAUb,UACX,kBAAC,EAAD,CAAiBC,WAAYnB,EAAM+B,UAAUZ,aACb,qBAA9BnB,EAAM+B,UAAUb,UAClB,kBAAC,EAAD,MACgC,gBAA9BlB,EAAM+B,UAAUb,UAClB,kBAAC,EAAD,CAAiBC,WAAYnB,EAAM+B,UAAUZ,kBAD/C,OCbIpB,mBAbf,SAAyBqB,GACvB,MAAO,CACLC,WAAYD,EAAME,MAAMD,WACxBU,UAAWX,EAAMY,UAIrB,SAA2B9C,GACzB,MAAO,CACLN,gBAAiB,SAAA0C,GAAK,OAAIpC,EAASN,EAAgB0C,QAIxCvB,EAjCf,SAAaC,GAWX,OAVA6E,qBAAU,WACR,GAAgD,OAA5CP,OAAOU,aAAaC,QAAQ,YAAsB,CACpD,IAAM3D,EAAQ4D,MAAMC,KAClBC,KAAKC,MAAMf,OAAOU,aAAaC,QAAQ,cAEzCjF,EAAMpB,gBAAgB0C,MAGvB,IAGD,oCACE,kBAAC,IAAD,CAAOgE,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,YAAYC,OAAK,EAACC,UAAWrD,IACxCnC,EAAM+B,UAAUb,UAAY,kBAAC,EAAD,MAAY,S,eCZzCwE,EAAe,CACnBrE,WAAY,GACZgC,KAAM,ICTR,IAAMqC,EAAe,CACnBxE,UAAW,KACXC,WAAY,ICFCwE,kBAAgB,CAC7BrE,MFWa,WAAqD,IAA/BF,EAA8B,uDAAtBsE,EAAcE,EAAQ,uCACjE,OAAQA,EAAO9G,MACb,IbhB4B,mBaiB1B,OAAO,2BACFsC,GADL,IAEEC,WAAYuE,EAAO/G,aAEvB,IbhBsB,aaiBpB,OAAO,2BACFuC,GADL,IAEEiC,KAAMjC,EAAMC,WAAWwE,QACrB,SAAAC,GAAO,OAAIA,EAAQtG,KAAOuG,OAAOH,EAAOnC,SACxC,KAEN,Ib9ByB,gBa+BvB,OAAO,2BACFrC,GADL,IAEEC,WAAW,GAAD,mBACLD,EAAMC,YADD,CAER,CACE7B,GAAIwG,KAAKC,MACTpG,MAAO+F,EAAO5G,WACdC,UAAW2G,EAAO3G,eAI1B,IbtCsB,aauCpB,OAAO,2BACFmC,GADL,IAEEC,WAAYD,EAAMC,WAAWK,KAAI,SAAAC,GAS/B,OARIA,EAAKnC,KAAOoG,EAAOpG,IACrBmC,EAAK1C,UAAUyC,KAAI,SAACwE,EAAWzG,GAI7B,OAHIA,IAAUmG,EAAOnG,QACnByG,EAAUhG,WAAagG,EAAUhG,WAE5BgG,KAGJvE,OAIb,IbzD4B,mBa0D1B,OAAO,2BACFP,GADL,IAEEC,WAAYD,EAAMC,WAAWwE,QAC3B,SAAAC,GAAO,OAAIA,EAAQtG,KAAOoG,EAAOpG,QAGvC,IbzDwB,ea2DtB,OADA2G,QAAQC,IAAIR,EAAO3G,WACZ,2BACFmC,GADL,IAEEC,WAAYD,EAAMC,WAAWK,KAAI,SAAAoE,GAK/B,OAJIA,EAAQtG,KAAOuG,OAAOH,EAAOpG,MAC/BsG,EAAQjG,MAAQ+F,EAAO/F,MACvBiG,EAAQ7G,UAAY2G,EAAO3G,WAEtB6G,OAGb,Ib1E4B,mBa4E1B,OADAxB,OAAOU,aAAaqB,QAAQ,WAAYjB,KAAKkB,UAAUlF,EAAMC,aACtDD,EACT,QACE,OAAOA,IE3EXY,MDGa,WAA8C,IAA/BZ,EAA8B,uDAAtBsE,EAAcE,EAAQ,uCAC1D,OAAQA,EAAO9G,MACb,IdNsB,acOpB,MAAO,CACLoC,UAAW0E,EAAO1E,UAClBC,WAAYyE,EAAOzE,YAEvB,IdVsB,acWpB,OAAOuE,EACT,QACE,OAAOtE,M,QEPOmF,QACW,cAA7BjC,OAAOkC,SAASC,UAEe,UAA7BnC,OAAOkC,SAASC,UAEhBnC,OAAOkC,SAASC,SAAS1D,MACvB,2DCPN,IAAM2D,EACc,kBAAXpC,QAAuBA,OAAOqC,qCACjCrC,OAAOqC,qCAAqC,IAC5CC,IAEAC,EAAQC,YACZC,EACAL,EAAiBM,YAAgBC,OAG7BC,EACJ,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,IAAD,CAAYM,SAAS,KACnB,kBAAC,EAAD,QAKNC,IAASC,OAAOH,EAAKtC,SAAS0C,eAAe,SDsGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3B,QAAQ2B,MAAMA,EAAMC,c","file":"static/js/main.ada932fb.chunk.js","sourcesContent":["import {\n  ADD_TODO_ITEM,\n  REMOVE_TODO_ITEM,\n  LOCALSTORAGE_GET,\n  LOCALSTORAGE_SET,\n  CHECK_ITEM,\n  TODO_BY_ID,\n  CHANGE_BY_ID,\n} from './actionTypes';\n\nexport function localstorageGet(localTodos) {\n  return {\n    type: LOCALSTORAGE_GET,\n    localTodos,\n  };\n}\n\nexport function todoById(byId) {\n  return {\n    type: TODO_BY_ID,\n    byId,\n  };\n}\n\nexport function addTodoItem(todosTitle, todosList) {\n  return dispatch => {\n    dispatch(addTodoItems(todosTitle, todosList));\n    dispatch(localSet());\n  };\n}\n\nfunction addTodoItems(todosTitle, todosList) {\n  return {\n    type: ADD_TODO_ITEM,\n    todosTitle,\n    todosList,\n  };\n}\n\nexport function checkItem(todoId, todoIndex) {\n  return dispatch => {\n    dispatch(checkItems(todoId, todoIndex));\n    dispatch(localSet());\n  };\n}\n\nfunction checkItems(id, index) {\n  return {\n    type: CHECK_ITEM,\n    id,\n    index,\n  };\n}\n\nexport function removeTodoItem(id) {\n  return dispatch => {\n    dispatch(removeTodoItems(id));\n    dispatch(localSet());\n  };\n}\n\nfunction removeTodoItems(id) {\n  return {\n    type: REMOVE_TODO_ITEM,\n    id,\n  };\n}\n\nexport function changeById(id, title, todosList) {\n  return dispatch => {\n    dispatch(changeByIds(id, title, todosList));\n    dispatch(localSet());\n  };\n}\n\nfunction changeByIds(id, title, todosList) {\n  return {\n    type: CHANGE_BY_ID,\n    id,\n    title,\n    todosList,\n  };\n}\n\nfunction localSet() {\n  return {\n    type: LOCALSTORAGE_SET,\n  };\n}\n","export const ADD_TODO_ITEM = 'ADD_TODO_ITEM';\nexport const REMOVE_TODO_ITEM = 'REMOVE_TODO_ITEM';\nexport const LOCALSTORAGE_GET = 'LOCALSTORAGE_GET';\nexport const LOCALSTORAGE_SET = 'LOCALSTORAGE_SET';\nexport const CHECK_ITEM = 'CHECK_ITEM';\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const HIDE_MODAL = 'HIDE_MODAL';\nexport const TODO_BY_ID = 'TODO_BY_ID';\nexport const CHANGE_BY_ID = 'CHANGE_BY_ID';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { checkItem } from '../../store/actions/todos';\n\nfunction TodoCheckboxText(props) {\n  const cls = ['todoCheck'];\n  if (props.completed) {\n    cls.push('completed');\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={props.completed}\n          onChange={() => props.checkItem(props.id, props.index)}\n        />\n        <div></div>\n      </label>\n      <span>{props.name}</span>\n    </div>\n  );\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    checkItem: (todoId, todoIndex) => dispatch(checkItem(todoId, todoIndex)),\n  };\n}\n\nexport default connect(null, mapDispathToProps)(TodoCheckboxText);\n","import React from 'react';\n\nexport default function BinReact(props) {\n  return (\n    <div className=\"svg\">\n      <svg\n        id=\"Icons\"\n        height={props.size}\n        viewBox=\"0 0 74 74\"\n        width={props.size}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fill=\"red\"\n          d=\"m56.082 72h-38.164a3.079 3.079 0 0 1 -3.05-2.805l-4.36-52.061a1 1 0 0 1 1-1.083h50.992a1 1 0 0 1 1 1.083l-4.36 52.061a3.079 3.079 0 0 1 -3.058 2.805zm-43.49-53.949 4.27 50.977a1.066 1.066 0 0 0 1.056.972h38.164a1.066 1.066 0 0 0 1.057-.972l4.27-50.977z\"\n        />\n        <path\n          fill=\"red\"\n          d=\"m66.172 18.06h-58.344a2.17 2.17 0 0 1 -2.167-2.167v-5.041a2.169 2.169 0 0 1 2.167-2.167h58.344a2.169 2.169 0 0 1 2.167 2.167v5.042a2.17 2.17 0 0 1 -2.167 2.166zm-58.344-7.375a.167.167 0 0 0 -.167.167v5.042a.167.167 0 0 0 .167.167h58.344a.167.167 0 0 0 .167-.167v-5.042a.167.167 0 0 0 -.167-.167z\"\n        />\n        <path\n          fill=\"red\"\n          d=\"m45.812 10.685h-17.624a1 1 0 0 1 -1-1v-5.067a2.621 2.621 0 0 1 2.618-2.618h14.388a2.621 2.621 0 0 1 2.618 2.618v5.067a1 1 0 0 1 -1 1zm-16.624-2h15.624v-4.067a.618.618 0 0 0 -.618-.618h-14.388a.618.618 0 0 0 -.618.618z\"\n        />\n        <path\n          fill=\"red\"\n          d=\"m47.462 56.03c-.029 0-.059 0-.088 0a1 1 0 0 1 -.909-1.083l2.289-26.131a1 1 0 1 1 1.992.175l-2.288 26.127a1 1 0 0 1 -.996.912z\"\n        />\n        <path\n          fill=\"red\"\n          d=\"m37 56.03a1 1 0 0 1 -1-1v-26.13a1 1 0 1 1 2 0v26.13a1 1 0 0 1 -1 1z\"\n        />\n        <path\n          fill=\"red\"\n          d=\"m26.538 56.03a1 1 0 0 1 -1-.913l-2.284-26.13a1 1 0 1 1 1.992-.175l2.289 26.131a1 1 0 0 1 -.909 1.083c-.026.003-.059.004-.088.004z\"\n        />\n      </svg>\n    </div>\n  );\n}\n","import { SHOW_MODAL, HIDE_MODAL } from './actionTypes';\n\nexport function showModal(modalType, modalProps) {\n  return {\n    type: SHOW_MODAL,\n    modalType,\n    modalProps,\n  };\n}\n\nexport function hideModal() {\n  return {\n    type: HIDE_MODAL,\n  };\n}\n","import React from 'react';\nimport TodoCheckboxText from './components/TodoItem/TodoCheckboxText';\nimport BinDelete from './svg/BinDelete';\nimport { connect } from 'react-redux';\nimport { removeTodoItem, checkItem } from './store/actions/todos';\nimport { Link } from 'react-router-dom';\nimport { showModal } from './store/actions/modal';\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"todoItem\">\n      <div className=\"todoItem__todoHeader\">\n        <div className=\"todoItem__title\">{props.title}</div>\n        <div className=\"todoItem__buttons\">\n          <Link className=\"todoItem__change\" to={'/todo/' + props.id}></Link>\n          <div\n            onClick={() => {\n              props.showModal('DELETE_POST', {\n                id: props.id,\n                deleteType: 'main',\n              });\n            }}\n          >\n            <BinDelete size=\"20\" />\n          </div>\n        </div>\n      </div>\n      {props.todosList.map((item, index) => {\n        return (\n          <>\n            <TodoCheckboxText\n              key={index}\n              id={props.id}\n              index={index}\n              completed={item.completed}\n              name={item.name}\n            />\n          </>\n        );\n      })}\n    </li>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todosArray: state.todos.todosArray,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    removeTodoItem: id => dispatch(removeTodoItem(id)),\n    checkItem: (todoId, todoIndex) => dispatch(checkItem(todoId, todoIndex)),\n    showModal: (modalType, modalProps) => {\n      dispatch(showModal(modalType, modalProps));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(TodoItem);\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nexport default function TodoList({ todos }) {\n  return (\n    <ul>\n      {todos.map(item => (\n        <TodoItem key={item.id} {...item} />\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport TodoList from '../TodoList';\nimport { connect } from 'react-redux';\nimport { localstorageGet } from '../store/actions/todos';\nimport { showModal } from '../store/actions/modal';\n\nfunction Main(props) {\n  const newArray = [...props.todosArray];\n\n  return (\n    <div className=\"container\">\n      <h1>Заметки Тестовое задание для Сбербанка</h1>\n      <button\n        className=\"button\"\n        onClick={() => props.showModal('SHOW_CREATE_TODO')}\n      >\n        Создать заметку\n      </button>\n      <h2>Список задач:</h2>\n      <TodoList todos={newArray.reverse()} />\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todosArray: state.todos.todosArray,\n    todoTitle: state.todos.todoTitle,\n    modalData: state.modal,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    localstorageGet: todos => dispatch(localstorageGet(todos)),\n    showModal: (modalType, modalProps) => {\n      dispatch(showModal(modalType, modalProps));\n    },\n  };\n}\nexport default connect(mapStateToProps, mapDispathToProps)(Main);\n","import React from 'react';\nimport BinDelete from '../svg/BinDelete';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { todoById, changeById } from '../store/actions/todos';\nimport { showModal } from '../store/actions/modal';\n\nclass EditPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoTitle: '',\n      arr: [],\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.todoById(this.props.match.params.id);\n      this.setState({\n        todoTitle: this.props.todoId.title,\n        arr: this.props.todoId.todosList,\n      });\n    });\n  }\n\n  handleChangeTitle(event) {\n    this.setState({\n      todoTitle: event.target.value,\n    });\n  }\n\n  addTodoItem = () => {\n    this.setState({\n      arr: [\n        ...this.state.arr,\n        {\n          name: '',\n          completed: false,\n        },\n      ],\n    });\n  };\n\n  handleChange = (e, index) => {\n    const newState = this.state.arr;\n    newState[index].name = e.target.value;\n    this.setState({\n      arr: newState,\n    });\n  };\n\n  handleRemove = index => {\n    this.state.arr.splice(index, 1);\n    this.setState({\n      arr: [...this.state.arr],\n    });\n  };\n\n  checkItem = (completed, index) => {\n    const newState = this.state.arr;\n    newState[index].completed = !completed;\n    this.setState({\n      arr: newState,\n    });\n  };\n\n  handleSave() {\n    this.props.changeById(\n      this.props.todoId.id,\n      this.state.todoTitle,\n      this.state.arr,\n    );\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"main-title\">\n          <Link to=\"/\">&larr;</Link>\n          <h1>Изменить заметку</h1>\n          <div></div>\n        </div>\n        <input\n          type=\"text\"\n          value={this.state.todoTitle}\n          onChange={e => this.handleChangeTitle(e)}\n        />\n        {this.state.arr.map((todo, index) => {\n          const cls = ['todoCheck'];\n          if (todo.completed) {\n            cls.push('completed');\n          }\n          return (\n            <div className={cls.join(' ')} key={index}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={() => this.checkItem(todo.completed, index)}\n                />\n                <div></div>\n              </label>\n              <input\n                type=\"text\"\n                placeholder=\"Task\"\n                onChange={e => this.handleChange(e, index)}\n                value={todo.name}\n              />\n              <button\n                className=\"button--delete\"\n                onClick={() => this.handleRemove(index)}\n              >\n                &times;\n              </button>\n            </div>\n          );\n        })}\n        <div className=\"button-add\">\n          <button className=\"btn-circle\" onClick={this.addTodoItem}>\n            +\n          </button>\n        </div>\n        <div className=\"buttons\">\n          <button\n            className=\"button\"\n            onClick={() => {\n              this.props.showModal('CHANGE_TODO', {\n                id: this.props.todoId.id,\n                title: this.state.todoTitle,\n                todosList: this.state.arr,\n              });\n            }}\n          >\n            Сохранить\n          </button>\n          <Link className=\"button\" to=\"/\">\n            Отмена\n          </Link>\n          <div\n            onClick={() => {\n              this.props.showModal('DELETE_POST', {\n                id: this.props.todoId.id,\n                deleteType: 'page',\n              });\n            }}\n          >\n            <BinDelete size=\"50\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todoId: state.todos.todo,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    todoById: id => dispatch(todoById(id)),\n    changeById: (id, title, todosList) => {\n      dispatch(changeById(id, title, todosList));\n    },\n    showModal: (modalType, modalProps) => {\n      dispatch(showModal(modalType, modalProps));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(EditPost);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeTodoItem } from '../../store/actions/todos';\nimport { hideModal } from '../../store/actions/modal';\nimport { useHistory } from 'react-router-dom';\n\nfunction DeletePostModal(props) {\n  const history = useHistory();\n  const removeTodo = () => {\n    props.removeTodoItem(props.modalProps.id);\n    props.hideModal();\n    if (props.modalProps.deleteType === 'page') {\n      history.push('/');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Вы действительно хотите удалить эту заметку?</h2>\n      <div className=\"buttons\">\n        <button className=\"button\" onClick={removeTodo}>\n          Да\n        </button>\n        <button className=\"button\" onClick={props.hideModal}>\n          Нет\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    removeTodoItem: id => dispatch(removeTodoItem(id)),\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(null, mapDispathToProps)(DeletePostModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodoItem } from './store/actions/todos';\nimport { hideModal } from './store/actions/modal';\n\nfunction TodoCreate(props) {\n  const [todosTitle, setTodosTitle] = useState(['']);\n  const [todos, addTodos] = useState([\n    {\n      name: '',\n      completed: false,\n    },\n  ]);\n\n  const addTodo = event => {\n    if (event.key === 'Enter') {\n      props.addTodoItem(todosTitle, todos);\n      addTodos([]);\n      props.hideModal();\n    }\n  };\n\n  const addCheckboxItem = () => {\n    addTodos([\n      ...todos,\n      {\n        name: '',\n        completed: false,\n      },\n    ]);\n  };\n\n  const handleChange = (e, index) => {\n    todos[index].name = e.target.value;\n    addTodos([...todos]);\n  };\n\n  const checkItem = (completed, index) => {\n    todos[index].completed = !completed;\n    addTodos([...todos]);\n  };\n\n  const handleRemove = index => {\n    todos.splice(index, 1);\n    addTodos([...todos]);\n  };\n\n  const addTodoItem = () => {\n    props.addTodoItem(todosTitle, todos);\n    addTodos([]);\n    props.hideModal();\n  };\n\n  return (\n    <div className=\"create-todo\">\n      <h1>Создать заметку</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Название заметки\"\n          value={todosTitle}\n          onChange={event => setTodosTitle(event.target.value)}\n          onKeyPress={addTodo}\n        />\n      </div>\n      {todos.map((todo, index) => {\n        const cls = ['todoCheck'];\n        if (todo.completed) {\n          cls.push('completed');\n        }\n        return (\n          <div className={cls.join(' ')} key={index}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() => checkItem(todo.completed, index)}\n              />\n              <div></div>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Задание\"\n              onChange={e => handleChange(e, index)}\n              value={todo.name}\n            />\n            <button className=\"button--delete\" onClick={e => handleRemove(e)}>\n              &times;\n            </button>\n          </div>\n        );\n      })}\n      <div className=\"button-add\">\n        <button className=\"btn-circle\" onClick={addCheckboxItem}>\n          +\n        </button>\n      </div>\n      <div className=\"buttons\">\n        <button className=\"button\" onClick={addTodoItem}>\n          Сохранить\n        </button>\n        <button className=\"button\" onClick={props.hideModal}>\n          Закрыть\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todoTitle: state.todos.todoTitle,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    addTodoItem: (todosTitle, todosList) => {\n      dispatch(addTodoItem(todosTitle, todosList));\n    },\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(TodoCreate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { changeById } from '../../store/actions/todos';\nimport { hideModal } from '../../store/actions/modal';\n\nfunction ChangeTodoModal(props) {\n  const history = useHistory();\n\n  const changeByIdModal = () => {\n    props.changeById(\n      props.modalProps.id,\n      props.modalProps.title,\n      props.modalProps.todosList,\n    );\n    props.hideModal();\n    history.push('/');\n  };\n\n  return (\n    <div>\n      <h2>Вы действительно хотите изменить эту заметку?</h2>\n      <div className=\"buttons\">\n        <button className=\"button\" onClick={changeByIdModal}>\n          Да\n        </button>\n        <button className=\"button\" onClick={props.hideModal}>\n          Нет\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    changeById: (id, title, todosList) => {\n      dispatch(changeById(id, title, todosList));\n    },\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(null, mapDispathToProps)(ChangeTodoModal);\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport DeletePostModal from './DeletePostModal';\nimport TodoCreate from '../../TodoCreate';\nimport ChangeTodoModal from './ChangeTodoModal';\nimport { connect } from 'react-redux';\nimport { hideModal } from '../../store/actions/modal';\n\nconst Modal = props => {\n  const modal = useRef(null);\n\n  const handleKeyUp = useCallback(\n    e => {\n      const keys = {\n        27: () => {\n          e.preventDefault();\n          props.hideModal();\n          window.removeEventListener('keyup', handleKeyUp, false);\n        },\n      };\n\n      if (keys[e.keyCode]) {\n        keys[e.keyCode]();\n      }\n    },\n    [props],\n  );\n\n  const handleOutsideClick = useCallback(\n    e => {\n      if (modal) {\n        if (!modal.current.contains(e.target)) {\n          props.hideModal();\n          document.removeEventListener('click', handleOutsideClick, false);\n        }\n      }\n    },\n    [props],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyUp, false);\n    document.addEventListener('click', handleOutsideClick, false);\n\n    return () => {\n      window.removeEventListener('keyup', handleKeyUp, false);\n      document.removeEventListener('click', handleOutsideClick, false);\n    };\n  }, [handleKeyUp, handleOutsideClick]);\n\n  const renderTypeModal = () => {\n    if (props.modalData.modalType === 'DELETE_POST') {\n      return <DeletePostModal modalProps={props.modalData.modalProps} />;\n    } else if (props.modalData.modalType === 'SHOW_CREATE_TODO') {\n      return <TodoCreate />;\n    } else if (props.modalData.modalType === 'CHANGE_TODO') {\n      return <ChangeTodoModal modalProps={props.modalData.modalProps} />;\n    }\n  };\n\n  return (\n    <div className=\"modalBackground\">\n      <div className=\"modal-content\" ref={modal}>\n        <button\n          type=\"button\"\n          className=\"closeButton\"\n          onClick={props.hideModal}\n        />\n        {renderTypeModal()}\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    modalData: state.modal,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(Modal);\n","import React, { useEffect } from 'react';\nimport Main from './pages/Main';\nimport EditPost from './pages/EditPost';\nimport Modal from './components/Modal/Modal';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { localstorageGet } from './store/actions/todos';\n\nfunction App(props) {\n  useEffect(() => {\n    if (window.localStorage.getItem('todoItem') !== null) {\n      const todos = Array.from(\n        JSON.parse(window.localStorage.getItem('todoItem')),\n      );\n      props.localstorageGet(todos);\n    }\n    // eslint-disable-next-line\n  }, []); \n\n  return (\n    <>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/todo/:id\" exact component={EditPost} />\n      {props.modalData.modalType ? <Modal /> : null}\n    </>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todosArray: state.todos.todosArray,\n    modalData: state.modal,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    localstorageGet: todos => dispatch(localstorageGet(todos)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(App);\n","/* eslint-disable indent */\nimport {\n  ADD_TODO_ITEM,\n  REMOVE_TODO_ITEM,\n  LOCALSTORAGE_GET,\n  LOCALSTORAGE_SET,\n  CHECK_ITEM,\n  TODO_BY_ID,\n  CHANGE_BY_ID,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  todosArray: [],\n  todo: {},\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOCALSTORAGE_GET:\n      return {\n        ...state,\n        todosArray: action.localTodos,\n      };\n    case TODO_BY_ID:\n      return {\n        ...state,\n        todo: state.todosArray.filter(\n          element => element.id === Number(action.byId),\n        )[0],\n      };\n    case ADD_TODO_ITEM:\n      return {\n        ...state,\n        todosArray: [\n          ...state.todosArray,\n          {\n            id: Date.now(),\n            title: action.todosTitle,\n            todosList: action.todosList,\n          },\n        ],\n      };\n    case CHECK_ITEM: {\n      return {\n        ...state,\n        todosArray: state.todosArray.map(item => {\n          if (item.id === action.id) {\n            item.todosList.map((itemCheck, index) => {\n              if (index === action.index) {\n                itemCheck.completed = !itemCheck.completed;\n              }\n              return itemCheck;\n            });\n          }\n          return item;\n        }),\n      };\n    }\n    case REMOVE_TODO_ITEM:\n      return {\n        ...state,\n        todosArray: state.todosArray.filter(\n          element => element.id !== action.id,\n        ),\n      };\n    case CHANGE_BY_ID:\n      console.log(action.todosList);\n      return {\n        ...state,\n        todosArray: state.todosArray.map(element => {\n          if (element.id === Number(action.id)) {\n            element.title = action.title;\n            element.todosList = action.todosList;\n          }\n          return element;\n        }),\n      };\n    case LOCALSTORAGE_SET:\n      window.localStorage.setItem('todoItem', JSON.stringify(state.todosArray));\n      return state;\n    default:\n      return state;\n  }\n}\n","/* eslint-disable indent */\n\nimport { SHOW_MODAL, HIDE_MODAL } from '../actions/actionTypes';\n\nconst initialState = {\n  modalType: null,\n  modalProps: {},\n};\n\nexport default function modal(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        modalType: action.modalType,\n        modalProps: action.modalProps,\n      };\n    case HIDE_MODAL:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport todosReducer from './todos';\nimport modalReducer from './modal';\n\nexport default combineReducers({\n  todos: todosReducer,\n  modal: modalReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nconst app = (\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}