{"version":3,"sources":["components/TodoItem/TodoCheckboxText.js","svg/BinDelete.js","store/actions/todos.js","store/actions/actionTypes.js","store/actions/modal.js","components/TodoItem/TodoItem.js","components/TodoItem/TodoList.js","pages/Main.js","pages/EditPost.js","components/Modal/DeletePostModal.js","components/Modal/TodoCreate.js","components/Modal/ChangeTodoModal.js","components/Modal/Modal.js","App.js","store/reducers/todos.js","store/reducers/modal.js","store/reducers/rootReducer.js","serviceWorker.js","index.js"],"names":["TodoCheckboxText","props","cls","completed","push","className","join","type","checked","disabled","name","BinReact","id","height","size","viewBox","width","xmlns","fill","d","localstorageGet","localTodos","addTodoItem","todosTitle","todosList","dispatch","addTodoItems","localSet","checkItem","todoId","todoIndex","index","removeTodoItem","removeTodoItems","changeById","title","changeByIds","showModal","modalType","modalProps","connect","state","todosArray","todos","to","onClick","deleteType","map","item","key","TodoList","todoTitle","newArray","reverse","EditPost","setState","arr","change","handleChange","e","newState","target","value","handleRemove","splice","onChangeTitle","titleChange","onChangeTitleKeyPress","event","onChange","onChangePressEnter","document","this","match","params","setTimeout","todoById","forEach","history","onKeyPress","handleChangeTitle","todo","placeholder","React","Component","byId","hideModal","useHistory","useState","setTodosTitle","addTodos","handleRemoveTodo","i","modalData","modal","useRef","handleKeyUp","useCallback","keys","27","preventDefault","window","removeEventListener","keyCode","handleOutsideClick","current","contains","dataset","backgorund","console","log","useEffect","addEventListener","data-backgorund","ref","localStorage","getItem","Array","from","JSON","parse","path","exact","component","Main","initialState","combineReducers","action","filter","element","Number","Date","now","itemCheck","setItem","stringify","Boolean","location","hostname","store","createStore","rootReducer","applyMiddleware","thunk","app","basename","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5a9306fd.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TodoCheckboxText(props) {\n  const cls = ['todoCheck'];\n  if (props.completed) {\n    cls.push('completed');\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <label>\n        <input type=\"checkbox\" checked={props.completed} disabled />\n        <div className=\"todoCheck__text\"></div>\n      </label>\n      <span>{props.name}</span>\n    </div>\n  );\n}\n\nexport default TodoCheckboxText;\n","import React from 'react';\n\nexport default function BinReact(props) {\n  return (\n    <div className=\"svg\">\n      <svg\n        id=\"Icons\"\n        height={props.size}\n        viewBox=\"0 0 74 74\"\n        width={props.size}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fill=\"red\"\n          d=\"m56.082 72h-38.164a3.079 3.079 0 0 1 -3.05-2.805l-4.36-52.061a1 1 0 0 1 1-1.083h50.992a1 1 0 0 1 1 1.083l-4.36 52.061a3.079 3.079 0 0 1 -3.058 2.805zm-43.49-53.949 4.27 50.977a1.066 1.066 0 0 0 1.056.972h38.164a1.066 1.066 0 0 0 1.057-.972l4.27-50.977z\"\n        />\n        <path\n          fill=\"red\"\n          d=\"m66.172 18.06h-58.344a2.17 2.17 0 0 1 -2.167-2.167v-5.041a2.169 2.169 0 0 1 2.167-2.167h58.344a2.169 2.169 0 0 1 2.167 2.167v5.042a2.17 2.17 0 0 1 -2.167 2.166zm-58.344-7.375a.167.167 0 0 0 -.167.167v5.042a.167.167 0 0 0 .167.167h58.344a.167.167 0 0 0 .167-.167v-5.042a.167.167 0 0 0 -.167-.167z\"\n        />\n        <path\n          fill=\"red\"\n          d=\"m45.812 10.685h-17.624a1 1 0 0 1 -1-1v-5.067a2.621 2.621 0 0 1 2.618-2.618h14.388a2.621 2.621 0 0 1 2.618 2.618v5.067a1 1 0 0 1 -1 1zm-16.624-2h15.624v-4.067a.618.618 0 0 0 -.618-.618h-14.388a.618.618 0 0 0 -.618.618z\"\n        />\n        <path\n          fill=\"red\"\n          d=\"m47.462 56.03c-.029 0-.059 0-.088 0a1 1 0 0 1 -.909-1.083l2.289-26.131a1 1 0 1 1 1.992.175l-2.288 26.127a1 1 0 0 1 -.996.912z\"\n        />\n        <path\n          fill=\"red\"\n          d=\"m37 56.03a1 1 0 0 1 -1-1v-26.13a1 1 0 1 1 2 0v26.13a1 1 0 0 1 -1 1z\"\n        />\n        <path\n          fill=\"red\"\n          d=\"m26.538 56.03a1 1 0 0 1 -1-.913l-2.284-26.13a1 1 0 1 1 1.992-.175l2.289 26.131a1 1 0 0 1 -.909 1.083c-.026.003-.059.004-.088.004z\"\n        />\n      </svg>\n    </div>\n  );\n}\n","import {\n  ADD_TODO_ITEM,\n  REMOVE_TODO_ITEM,\n  LOCALSTORAGE_GET,\n  LOCALSTORAGE_SET,\n  CHECK_ITEM,\n  TODO_BY_ID,\n  CHANGE_BY_ID,\n} from './actionTypes';\n\nexport function localstorageGet(localTodos) {\n  return {\n    type: LOCALSTORAGE_GET,\n    localTodos,\n  };\n}\n\nexport function todoById(byId) {\n  return {\n    type: TODO_BY_ID,\n    byId,\n  };\n}\n\nexport function addTodoItem(todosTitle, todosList) {\n  return dispatch => {\n    dispatch(addTodoItems(todosTitle, todosList));\n    dispatch(localSet());\n  };\n}\n\nfunction addTodoItems(todosTitle, todosList) {\n  return {\n    type: ADD_TODO_ITEM,\n    todosTitle,\n    todosList,\n  };\n}\n\nexport function checkItem(todoId, todoIndex) {\n  return dispatch => {\n    dispatch(checkItems(todoId, todoIndex));\n    dispatch(localSet());\n  };\n}\n\nfunction checkItems(id, index) {\n  return {\n    type: CHECK_ITEM,\n    id,\n    index,\n  };\n}\n\nexport function removeTodoItem(id) {\n  return dispatch => {\n    dispatch(removeTodoItems(id));\n    dispatch(localSet());\n  };\n}\n\nfunction removeTodoItems(id) {\n  return {\n    type: REMOVE_TODO_ITEM,\n    id,\n  };\n}\n\nexport function changeById(id, title, todosList) {\n  return dispatch => {\n    dispatch(changeByIds(id, title, todosList));\n    dispatch(localSet());\n  };\n}\n\nfunction changeByIds(id, title, todosList) {\n  return {\n    type: CHANGE_BY_ID,\n    id,\n    title,\n    todosList,\n  };\n}\n\nfunction localSet() {\n  return {\n    type: LOCALSTORAGE_SET,\n  };\n}\n","export const ADD_TODO_ITEM = 'ADD_TODO_ITEM';\nexport const REMOVE_TODO_ITEM = 'REMOVE_TODO_ITEM';\nexport const LOCALSTORAGE_GET = 'LOCALSTORAGE_GET';\nexport const LOCALSTORAGE_SET = 'LOCALSTORAGE_SET';\nexport const CHECK_ITEM = 'CHECK_ITEM';\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const HIDE_MODAL = 'HIDE_MODAL';\nexport const TODO_BY_ID = 'TODO_BY_ID';\nexport const CHANGE_BY_ID = 'CHANGE_BY_ID';\n","import { SHOW_MODAL, HIDE_MODAL } from './actionTypes';\n\nexport function showModal(modalType, modalProps) {\n  return {\n    type: SHOW_MODAL,\n    modalType,\n    modalProps,\n  };\n}\n\nexport function hideModal() {\n  return {\n    type: HIDE_MODAL,\n  };\n}\n","import React from 'react';\nimport TodoCheckboxText from './TodoCheckboxText';\nimport BinDelete from '../../svg/BinDelete';\nimport { connect } from 'react-redux';\nimport { removeTodoItem, checkItem } from '../../store/actions/todos';\nimport { Link } from 'react-router-dom';\nimport { showModal } from '../../store/actions/modal';\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"todoItem\">\n      <div className=\"todoItem__todoHeader\">\n        <div className=\"todoItem__title\">{props.title}</div>\n        <div className=\"todoItem__buttons\">\n          <Link className=\"todoItem__change\" to={'/todo/' + props.id}></Link>\n          <div\n            onClick={() => {\n              props.showModal('DELETE_POST', {\n                id: props.id,\n                deleteType: 'main',\n              });\n            }}\n          >\n            <BinDelete size=\"20\" />\n          </div>\n        </div>\n      </div>\n      {props.todosList.map((item, index) => {\n        return (\n          <div key={index}>\n            <TodoCheckboxText completed={item.completed} name={item.name} />\n          </div>\n        );\n      })}\n    </li>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todosArray: state.todos.todosArray,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    removeTodoItem: id => dispatch(removeTodoItem(id)),\n    checkItem: (todoId, todoIndex) => dispatch(checkItem(todoId, todoIndex)),\n    showModal: (modalType, modalProps) => {\n      dispatch(showModal(modalType, modalProps));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(TodoItem);\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nexport default function TodoList({ todos }) {\n  return (\n    <ul>\n      {todos.map(item => (\n        <TodoItem key={item.id} {...item} />\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport TodoList from '../components/TodoItem/TodoList';\nimport { connect } from 'react-redux';\nimport { localstorageGet } from '../store/actions/todos';\nimport { showModal } from '../store/actions/modal';\n\nfunction Main(props) {\n  const newArray = [...props.todosArray];\n\n  return (\n    <div className=\"container\">\n      <h1>Заметки Тестовое задание для Сбербанка</h1>\n      <button\n        className=\"button\"\n        onClick={() => props.showModal('SHOW_CREATE_TODO')}\n      >\n        Создать заметку\n      </button>\n      <h2>Список задач:</h2>\n      <TodoList todos={newArray.reverse()} />\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todosArray: state.todos.todosArray,\n    todoTitle: state.todos.todoTitle,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    localstorageGet: todos => dispatch(localstorageGet(todos)),\n    showModal: (modalType, modalProps) => {\n      dispatch(showModal(modalType, modalProps));\n    },\n  };\n}\nexport default connect(mapStateToProps, mapDispathToProps)(Main);\n","import React from 'react';\nimport BinDelete from '../svg/BinDelete';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { todoById, changeById } from '../store/actions/todos';\nimport { showModal } from '../store/actions/modal';\n\nclass EditPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoTitle: '',\n      arr: [],\n      titleChange: false,\n    };\n  }\n\n  componentDidMount() {\n    document.title = `Заметка ${this.props.match.params.id}`;\n    setTimeout(() => {\n      this.props.todoById(this.props.match.params.id);\n      this.setState({\n        todoTitle: this.props.todoId.title,\n        arr: this.props.todoId.todosList,\n      });\n      this.state.arr.forEach(item => (item.change = false));\n      this.setState({\n        arr: this.state.arr,\n      });\n    });\n  }\n\n  handleChangeTitle(event) {\n    this.setState({\n      todoTitle: event.target.value,\n    });\n  }\n\n  addTodoItem = () => {\n    this.setState({\n      arr: [\n        ...this.state.arr,\n        {\n          name: '',\n          completed: false,\n          change: true,\n        },\n      ],\n    });\n  };\n\n  handleChange = (e, index) => {\n    const newState = this.state.arr;\n    newState[index].name = e.target.value;\n    this.setState({\n      arr: newState,\n    });\n  };\n\n  handleRemove = index => {\n    this.state.arr.splice(index, 1);\n    this.setState({\n      arr: [...this.state.arr],\n    });\n  };\n\n  checkItem = (completed, index) => {\n    const newState = this.state.arr;\n    newState[index].completed = !completed;\n    this.setState({\n      arr: newState,\n    });\n  };\n\n  onChangeTitle = () => {\n    this.setState({\n      titleChange: !this.state.titleChange,\n    });\n  };\n\n  onChangeTitleKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.onChangeTitle();\n    }\n  };\n\n  onChange = (change, index) => {\n    const newState = this.state.arr;\n    newState[index].change = !change;\n    this.setState({\n      arr: newState,\n    });\n  };\n\n  onChangePressEnter = (event, change, index) => {\n    if (event.key === 'Enter') {\n      this.onChange(change, index);\n    }\n  };\n\n  handleSave() {\n    this.props.changeById(\n      this.props.todoId.id,\n      this.state.todoTitle,\n      this.state.arr,\n    );\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"main-title\">\n          <Link to=\"/\">&larr;</Link>\n          <h1>Изменить заметку</h1>\n          <div></div>\n        </div>\n        <div className=\"todoTitle\">\n          {!this.state.titleChange ? (\n            <h2 onClick={() => this.onChangeTitle()}>{this.state.todoTitle}</h2>\n          ) : (\n            <input\n              type=\"text\"\n              value={this.state.todoTitle}\n              onKeyPress={e => this.onChangeTitleKeyPress(e)}\n              onChange={e => this.handleChangeTitle(e)}\n            />\n          )}\n          <div\n            className=\"todoItem__change\"\n            onClick={() => this.onChangeTitle()}\n          ></div>\n        </div>\n        {this.state.arr.map((todo, index) => {\n          const cls = ['todoCheck'];\n          if (todo.completed) {\n            cls.push('completed');\n          }\n          return (\n            <div className={cls.join(' ')} key={index}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={() => this.checkItem(todo.completed, index)}\n                />\n                <div className=\"todoCheck__text\"></div>\n              </label>\n              {todo.change ? (\n                <input\n                  type=\"text\"\n                  placeholder=\"Task\"\n                  onChange={e => this.handleChange(e, index)}\n                  onKeyPress={e =>\n                    this.onChangePressEnter(e, todo.change, index)\n                  }\n                  value={todo.name}\n                />\n              ) : (\n                <span onClick={() => this.onChange(todo.change, index)}>\n                  {todo.name}\n                </span>\n              )}\n              <div\n                className=\"todoItem__change\"\n                onClick={() => this.onChange(todo.change, index)}\n              ></div>\n              <button\n                className=\"button--delete\"\n                onClick={() => this.handleRemove(index)}\n              >\n                &times;\n              </button>\n            </div>\n          );\n        })}\n        <div className=\"button-add\">\n          <button className=\"btn-circle\" onClick={this.addTodoItem}>\n            +\n          </button>\n        </div>\n        <div className=\"buttons buttons--editPost\">\n          <div className=\"buttons\">\n            <button\n              className=\"button\"\n              onClick={() => {\n                this.props.showModal('CHANGE_TODO', {\n                  id: this.props.todoId.id,\n                  title: this.state.todoTitle,\n                  todosList: this.state.arr,\n                });\n              }}\n              disabled={!this.state.todoTitle}\n            >\n              Сохранить\n            </button>\n            <Link className=\"button\" to=\"/\">\n              Отмена\n            </Link>\n          </div>\n          <div\n            onClick={() => {\n              this.props.showModal('DELETE_POST', {\n                id: this.props.todoId.id,\n                deleteType: 'page',\n              });\n            }}\n          >\n            <BinDelete size=\"50\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todoId: state.todos.todo,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    todoById: id => dispatch(todoById(id)),\n    changeById: (id, title, todosList) => {\n      dispatch(changeById(id, title, todosList));\n    },\n    showModal: (modalType, modalProps) => {\n      dispatch(showModal(modalType, modalProps));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(EditPost);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeTodoItem } from '../../store/actions/todos';\nimport { hideModal } from '../../store/actions/modal';\nimport { useHistory } from 'react-router-dom';\n\nfunction DeletePostModal(props) {\n  const history = useHistory();\n  const removeTodo = () => {\n    props.removeTodoItem(props.modalProps.id);\n    props.hideModal();\n    if (props.modalProps.deleteType === 'page') {\n      history.push('/');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Вы действительно хотите удалить эту заметку?</h2>\n      <div className=\"buttons\">\n        <button className=\"button\" onClick={removeTodo}>\n          Да\n        </button>\n        <button className=\"button\" onClick={props.hideModal}>\n          Нет\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    removeTodoItem: id => dispatch(removeTodoItem(id)),\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(null, mapDispathToProps)(DeletePostModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodoItem } from '../../store/actions/todos';\nimport { hideModal } from '../../store/actions/modal';\n\nfunction TodoCreate(props) {\n  const [todosTitle, setTodosTitle] = useState('');\n  const [todo, addTodos] = useState([\n    {\n      name: '',\n      completed: false,\n    },\n  ]);\n\n  const addTodo = event => {\n    if (event.key === 'Enter' && todosTitle !== '') {\n      addTodoItem();\n    }\n  };\n\n  const addTodoItem = () => {\n    props.addTodoItem(todosTitle, todo);\n    props.hideModal();\n  };\n\n  const addCheckboxItem = () => {\n    addTodos([\n      ...todo,\n      {\n        name: '',\n        completed: false,\n      },\n    ]);\n  };\n\n  const handleChange = (e, index) => {\n    todo[index].name = e.target.value;\n    addTodos([...todo]);\n  };\n\n  const checkItem = (completed, index) => {\n    todo[index].completed = !completed;\n    addTodos([...todo]);\n  };\n\n  const handleRemoveTodo = i => {\n    if (i > -1) {\n      todo.splice(i, 1);\n      addTodos([...todo]);\n    }\n  };\n\n  return (\n    <div className=\"create-todo\">\n      <h1>Создать заметку</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Название заметки\"\n          value={todosTitle}\n          onChange={event => setTodosTitle(event.target.value)}\n          onKeyPress={addTodo}\n        />\n      </div>\n      <ul>\n        {todo.map((todo, index) => {\n          const cls = ['todoCheck'];\n          if (todo.completed) {\n            cls.push('completed');\n          }\n          return (\n            <div className={cls.join(' ')} key={index}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={() => checkItem(todo.completed, index)}\n                />\n                <div className=\"todoCheck__text\"></div>\n              </label>\n              <input\n                type=\"text\"\n                placeholder=\"Задание\"\n                onChange={e => handleChange(e, index)}\n                value={todo.name}\n              />\n              <button\n                type=\"button\"\n                className=\"button--delete\"\n                onClick={() => handleRemoveTodo(index)}\n              >\n                &times;\n              </button>\n              <div></div>\n            </div>\n          );\n        })}\n      </ul>\n      <div className=\"button-add\">\n        <button className=\"btn-circle\" onClick={addCheckboxItem}>\n          +\n        </button>\n      </div>\n      <div className=\"buttons\">\n        <button className=\"button\" onClick={addTodoItem} disabled={!todosTitle}>\n          Сохранить\n        </button>\n        <button className=\"button\" onClick={props.hideModal}>\n          Закрыть\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todoTitle: state.todos.todoTitle,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    addTodoItem: (todosTitle, todosList) => {\n      dispatch(addTodoItem(todosTitle, todosList));\n    },\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(TodoCreate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { changeById } from '../../store/actions/todos';\nimport { hideModal } from '../../store/actions/modal';\n\nfunction ChangeTodoModal(props) {\n  const history = useHistory();\n\n  const changeByIdModal = () => {\n    props.changeById(\n      props.modalProps.id,\n      props.modalProps.title,\n      props.modalProps.todosList,\n    );\n    props.hideModal();\n    history.push('/');\n  };\n\n  return (\n    <div>\n      <h2>Вы действительно хотите изменить эту заметку?</h2>\n      <div className=\"buttons\">\n        <button className=\"button\" onClick={changeByIdModal}>\n          Да\n        </button>\n        <button className=\"button\" onClick={props.hideModal}>\n          Нет\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    changeById: (id, title, todosList) => {\n      dispatch(changeById(id, title, todosList));\n    },\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(null, mapDispathToProps)(ChangeTodoModal);\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport DeletePostModal from './DeletePostModal';\nimport TodoCreate from './TodoCreate';\nimport ChangeTodoModal from './ChangeTodoModal';\nimport { connect } from 'react-redux';\nimport { hideModal } from '../../store/actions/modal';\n\nconst Modal = props => {\n  const modal = useRef(null);\n\n  const handleKeyUp = useCallback(\n    e => {\n      const keys = {\n        27: () => {\n          e.preventDefault();\n          props.hideModal();\n          window.removeEventListener('keyup', handleKeyUp, false);\n        },\n      };\n\n      if (keys[e.keyCode]) {\n        keys[e.keyCode]();\n      }\n    },\n    [props],\n  );\n\n  const handleOutsideClick = useCallback(\n    e => {\n      if (\n        modal &&\n        !modal.current.contains(e.target) &&\n        e.target.dataset.backgorund === 'true'\n      ) {\n        console.log('это я руиню', e.target.dataset);\n        document.removeEventListener('click', handleOutsideClick, false);\n        props.hideModal();\n      } else {\n        console.log('а я нет руиню', modal);\n      }\n    },\n    [props],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyUp, false);\n    document.addEventListener('click', handleOutsideClick, false);\n\n    return () => {\n      window.removeEventListener('keyup', handleKeyUp, false);\n      document.removeEventListener('click', handleOutsideClick, false);\n    };\n  }, [handleKeyUp, handleOutsideClick]);\n\n  const renderTypeModal = () => {\n    if (props.modalData.modalType === 'DELETE_POST') {\n      return <DeletePostModal modalProps={props.modalData.modalProps} />;\n    } else if (props.modalData.modalType === 'SHOW_CREATE_TODO') {\n      return <TodoCreate />;\n    } else if (props.modalData.modalType === 'CHANGE_TODO') {\n      return <ChangeTodoModal modalProps={props.modalData.modalProps} />;\n    }\n  };\n\n  return (\n    <div className=\"modalBackground\" data-backgorund=\"true\">\n      <div className=\"modal-content\" ref={modal}>\n        <button\n          type=\"button\"\n          className=\"closeButton\"\n          onClick={props.hideModal}\n        />\n        {renderTypeModal()}\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    modalData: state.modal,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(Modal);\n","import React, { useEffect } from 'react';\nimport Main from './pages/Main';\nimport EditPost from './pages/EditPost';\nimport Modal from './components/Modal/Modal';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { localstorageGet } from './store/actions/todos';\n\nfunction App(props) {\n  useEffect(() => {\n    if (window.localStorage.getItem('todoItem') !== null) {\n      const todos = Array.from(\n        JSON.parse(window.localStorage.getItem('todoItem')),\n      );\n      props.localstorageGet(todos);\n    }\n  }, []);\n\n  return (\n    <>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/todo/:id\" exact component={EditPost} />\n      {props.modalData.modalType ? <Modal /> : null}\n    </>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todosArray: state.todos.todosArray,\n    modalData: state.modal,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    localstorageGet: todos => dispatch(localstorageGet(todos)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(App);\n","import {\n  ADD_TODO_ITEM,\n  REMOVE_TODO_ITEM,\n  LOCALSTORAGE_GET,\n  LOCALSTORAGE_SET,\n  CHECK_ITEM,\n  TODO_BY_ID,\n  CHANGE_BY_ID,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  todosArray: [],\n  todo: {},\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOCALSTORAGE_GET:\n      return {\n        ...state,\n        todosArray: action.localTodos,\n      };\n    case TODO_BY_ID:\n      return {\n        ...state,\n        todo: state.todosArray.filter(\n          element => element.id === Number(action.byId),\n        )[0],\n      };\n    case ADD_TODO_ITEM:\n      return {\n        ...state,\n        todosArray: [\n          ...state.todosArray,\n          {\n            id: Date.now(),\n            title: action.todosTitle,\n            todosList: action.todosList,\n          },\n        ],\n      };\n    case CHECK_ITEM: {\n      return {\n        ...state,\n        todosArray: state.todosArray.map(item => {\n          if (item.id === action.id) {\n            item.todosList.map((itemCheck, index) => {\n              if (index === action.index) {\n                itemCheck.completed = !itemCheck.completed;\n              }\n              return itemCheck;\n            });\n          }\n          return item;\n        }),\n      };\n    }\n    case REMOVE_TODO_ITEM:\n      return {\n        ...state,\n        todosArray: state.todosArray.filter(\n          element => element.id !== action.id,\n        ),\n      };\n    case CHANGE_BY_ID:\n      console.log(action.todosList);\n      return {\n        ...state,\n        todosArray: state.todosArray.map(element => {\n          if (element.id === Number(action.id)) {\n            element.title = action.title;\n            element.todosList = action.todosList;\n          }\n          return element;\n        }),\n      };\n    case LOCALSTORAGE_SET:\n      window.localStorage.setItem('todoItem', JSON.stringify(state.todosArray));\n      return state;\n    default:\n      return state;\n  }\n}\n","import { SHOW_MODAL, HIDE_MODAL } from '../actions/actionTypes';\n\nconst initialState = {\n  modalType: null,\n  modalProps: {},\n};\n\nexport default function modal(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        modalType: action.modalType,\n        modalProps: action.modalProps,\n      };\n    case HIDE_MODAL:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport todosReducer from './todos';\nimport modalReducer from './modal';\n\nexport default combineReducers({\n  todos: todosReducer,\n  modal: modalReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}