{"version":3,"sources":["store/actions/todos.js","store/actions/actionTypes.js","store/actions/modal.js","TodoItem.js","TodoList.js","pages/Main.js","components/DeletePostModal.js","TodoCreate.js","components/ChangeTodoModal.js","components/ModalRoot.js","pages/EditPost.js","components/Modal.js","App.js","store/reducers/todos.js","store/reducers/modal.js","store/reducers/rootReducer.js","serviceWorker.js","index.js"],"names":["localstorageGet","localTodos","type","addTodoItem","todosTitle","todosList","dispatch","addTodoItems","localSet","checkItem","todoId","todoIndex","id","index","removeTodoItem","removeTodoItems","changeById","title","changeByIds","showModal","modalType","modalProps","connect","state","todosArray","todos","props","className","to","onClick","map","item","cls","completed","push","key","join","checked","onChange","name","TodoList","todoTitle","modalData","modal","newArray","length","reverse","hideModal","useState","setTodosTitle","addTodos","placeholder","value","event","target","onKeyPress","todo","e","handleChange","splice","handleRemove","history","useHistory","ModalRoot","handleClick","console","log","document","removeEventListener","handleOutsideClick","addEventListener","renderTypeModal","node","contains","bind","this","ref","React","Component","EditPost","setState","arr","newState","setTimeout","todoById","match","params","handleChangeTitle","byId","useRef","handleKeyUp","useCallback","keys","27","preventDefault","window","keyCode","current","useEffect","localStorage","getItem","Array","from","JSON","parse","path","exact","component","Main","initialState","combineReducers","action","filter","element","Number","Date","now","itemCheck","setItem","stringify","Boolean","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","basename","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.35a168a6.chunk.js","sourcesContent":["import {\n  ADD_TODO_ITEM,\n  REMOVE_TODO_ITEM,\n  LOCALSTORAGE_GET,\n  LOCALSTORAGE_SET,\n  CHECK_ITEM,\n  TODO_BY_ID,\n  CHANGE_BY_ID,\n} from './actionTypes';\n\nexport function localstorageGet(localTodos) {\n  return {\n    type: LOCALSTORAGE_GET,\n    localTodos,\n  };\n}\n\nexport function todoById(byId) {\n  return {\n    type: TODO_BY_ID,\n    byId,\n  };\n}\n\nexport function addTodoItem(todosTitle, todosList) {\n  return dispatch => {\n    dispatch(addTodoItems(todosTitle, todosList));\n    dispatch(localSet());\n  };\n}\n\nfunction addTodoItems(todosTitle, todosList) {\n  return {\n    type: ADD_TODO_ITEM,\n    todosTitle,\n    todosList,\n  };\n}\n\nexport function checkItem(todoId, todoIndex) {\n  return dispatch => {\n    dispatch(checkItems(todoId, todoIndex));\n    dispatch(localSet());\n  };\n}\n\nfunction checkItems(id, index) {\n  return {\n    type: CHECK_ITEM,\n    id,\n    index,\n  };\n}\n\nexport function removeTodoItem(id) {\n  return dispatch => {\n    dispatch(removeTodoItems(id));\n    dispatch(localSet());\n  };\n}\n\nfunction removeTodoItems(id) {\n  return {\n    type: REMOVE_TODO_ITEM,\n    id,\n  };\n}\n\nexport function changeById(id, title, todosList) {\n  return dispatch => {\n    dispatch(changeByIds(id, title, todosList));\n    dispatch(localSet());\n  };\n}\n\nfunction changeByIds(id, title, todosList) {\n  return {\n    type: CHANGE_BY_ID,\n    id,\n    title,\n    todosList,\n  };\n}\n\nfunction localSet() {\n  return {\n    type: LOCALSTORAGE_SET,\n  };\n}\n","export const ADD_TODO_ITEM = 'ADD_TODO_ITEM';\nexport const REMOVE_TODO_ITEM = 'REMOVE_TODO_ITEM';\nexport const LOCALSTORAGE_GET = 'LOCALSTORAGE_GET';\nexport const LOCALSTORAGE_SET = 'LOCALSTORAGE_SET';\nexport const CHECK_ITEM = 'CHECK_ITEM';\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const HIDE_MODAL = 'HIDE_MODAL';\nexport const TODO_BY_ID = 'TODO_BY_ID';\nexport const CHANGE_BY_ID = 'CHANGE_BY_ID';\n","import { SHOW_MODAL, HIDE_MODAL } from './actionTypes';\n\nexport function showModal(modalType, modalProps) {\n  return {\n    type: SHOW_MODAL,\n    modalType,\n    modalProps,\n  };\n}\n\nexport function hideModal() {\n  return {\n    type: HIDE_MODAL,\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeTodoItem, checkItem } from './store/actions/todos';\nimport { Link } from 'react-router-dom';\nimport { showModal } from './store/actions/modal';\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"todoItem\">\n      <div className=\"todoItem__todoHeader\">\n        <div className=\"todoItem__title\">{props.title}</div>\n        <div className=\"todoItem__buttons\">\n          <Link className=\"todoItem__change\" to={'/todo/' + props.id}>\n            Изменить\n          </Link>\n          <div\n            className=\"todoItem__delete\"\n            onClick={() => props.showModal('DELETE_POST', props.id)}\n          >\n            Удалить\n          </div>\n        </div>\n      </div>\n      <hr></hr>\n      {props.todosList.map((item, index) => {\n        const cls = ['todoCheck'];\n        if (item.completed) {\n          cls.push('completed');\n        }\n        return (\n          <div key={index} className={cls.join(' ')}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={item.completed}\n                onChange={() => props.checkItem(props.id, index)}\n              />\n              <div></div>\n            </label>\n            <span>{item.name}</span>\n          </div>\n        );\n      })}\n    </li>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todosArray: state.todos.todosArray,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    removeTodoItem: id => dispatch(removeTodoItem(id)),\n    checkItem: (todoId, todoIndex) => dispatch(checkItem(todoId, todoIndex)),\n    showModal: (modalType, modalProps) => {\n      dispatch(showModal(modalType, modalProps));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(TodoItem);\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nexport default function TodoList({ todos }) {\n  return (\n    <ul>\n      {todos.map(item => (\n        <TodoItem key={item.id} {...item} />\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport TodoList from '../TodoList';\nimport { connect } from 'react-redux';\nimport { localstorageGet } from '../store/actions/todos';\nimport { showModal } from '../store/actions/modal';\n\nfunction Main(props) {\n  const newArray = [...props.todosArray];\n\n  return (\n    <div className=\"container\">\n      <h1>Заметки Тестовое задание для Сбербанка</h1>\n      <button\n        className=\"button\"\n        onClick={() => props.showModal('SHOW_CREATE_TODO')}\n      >\n        Создать заметку\n      </button>\n      <h2>Список задач:</h2>\n      {newArray.length ? (\n        <TodoList todos={newArray.reverse()} />\n      ) : (\n        <div className=\"zeroTodo\">\n          <h1>У вас нет еще ни одной заметки</h1>\n          <button\n            className=\"button\"\n            onClick={() => props.showModal('SHOW_CREATE_TODO')}\n          >\n            Создать заметку\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todosArray: state.todos.todosArray,\n    todoTitle: state.todos.todoTitle,\n    modalData: state.modal,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    localstorageGet: todos => dispatch(localstorageGet(todos)),\n    showModal: (modalType, modalProps) => {\n      dispatch(showModal(modalType, modalProps));\n    },\n  };\n}\nexport default connect(mapStateToProps, mapDispathToProps)(Main);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeTodoItem } from '../store/actions/todos';\nimport { hideModal } from '../store/actions/modal';\n\nfunction DeletePostModal(props) {\n  const removeTodo = () => {\n    props.removeTodoItem(props.modalProps);\n    props.hideModal();\n  };\n\n  return (\n    <div>\n      <h2>Вы действительно хотите удалить эту заметку?</h2>\n      <div className=\"buttons\">\n        <button className=\"button\" onClick={removeTodo}>\n          Да\n        </button>\n        <button className=\"button\" onClick={props.hideModal}>\n          Нет\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    removeTodoItem: id => dispatch(removeTodoItem(id)),\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(null, mapDispathToProps)(DeletePostModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodoItem } from './store/actions/todos';\nimport { hideModal } from './store/actions/modal';\n\nfunction TodoCreate(props) {\n  const [todosTitle, setTodosTitle] = useState(['']);\n  const [todos, addTodos] = useState([\n    {\n      name: '',\n      completed: false,\n    },\n  ]);\n\n  const addTodo = event => {\n    if (event.key === 'Enter') {\n      props.addTodoItem(todosTitle, todos);\n      addTodos([]);\n      props.hideModal();\n    }\n  };\n\n  const addCheckboxItem = () => {\n    addTodos([\n      ...todos,\n      {\n        name: '',\n        completed: false,\n      },\n    ]);\n  };\n\n  const handleChange = (e, index) => {\n    todos[index].name = e.target.value;\n    addTodos([...todos]);\n  };\n\n  const checkItem = (completed, index) => {\n    todos[index].completed = !completed;\n    addTodos([...todos]);\n  };\n\n  const handleRemove = index => {\n    todos.splice(index, 1);\n    addTodos([...todos]);\n  };\n\n  const addTodoItem = () => {\n    props.addTodoItem(todosTitle, todos);\n    addTodos([]);\n    props.hideModal();\n  };\n\n  return (\n    <div className=\"create-todo\">\n      <h1>Создать заметку</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={todosTitle}\n          onChange={event => setTodosTitle(event.target.value)}\n          onKeyPress={addTodo}\n        />\n      </div>\n      {todos.map((todo, index) => {\n        const cls = ['todoCheck'];\n        if (todo.completed) {\n          cls.push('completed');\n        }\n        return (\n          <div className={cls.join(' ')} key={index}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() => checkItem(todo.completed, index)}\n              />\n              <div></div>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Task\"\n              onChange={e => handleChange(e, index)}\n              value={todo.name}\n            />\n            <button className=\"button--delete\" onClick={e => handleRemove(e)}>\n              &times;\n            </button>\n          </div>\n        );\n      })}\n      <button className=\"button\" onClick={addCheckboxItem}>\n        Добавить чекбокс\n      </button>\n      <div className=\"buttons\">\n        <button className=\"button\" onClick={addTodoItem}>\n          Сохранить\n        </button>\n        <button className=\"button\" onClick={props.hideModal}>\n          Закрыть\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todoTitle: state.todos.todoTitle,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    addTodoItem: (todosTitle, todosList) => {\n      dispatch(addTodoItem(todosTitle, todosList));\n    },\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(TodoCreate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { changeById } from '../store/actions/todos';\nimport { hideModal } from '../store/actions/modal';\n\nfunction ChangeTodoModal(props) {\n  const history = useHistory();\n\n  const changeByIdModal = () => {\n    props.changeById(\n      props.modalProps.id,\n      props.modalProps.title,\n      props.modalProps.todosList,\n    );\n    props.hideModal();\n    history.push('/');\n  };\n\n  return (\n    <div>\n      <h2>Вы действительно хотите изменить эту заметку?</h2>\n      <div></div>\n      <button onClick={changeByIdModal}>Yes</button>\n      <button onClick={props.hideModal}>Nope</button>\n    </div>\n  );\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    changeById: (id, title, todosList) => {\n      dispatch(changeById(id, title, todosList));\n    },\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(null, mapDispathToProps)(ChangeTodoModal);\n","/* eslint-disable indent */\nimport React from 'react';\nimport DeletePostModal from './DeletePostModal';\nimport TodoCreate from '../TodoCreate';\nimport ChangeTodoModal from './ChangeTodoModal';\nimport { connect } from 'react-redux';\nimport { hideModal } from '../store/actions/modal';\n\nclass ModalRoot extends React.Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  handleClick = () => {\n    console.log(!this.props.modal.modalType);\n    if (!this.props.modal.modalType) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n  };\n\n  renderTypeModal = () => {\n    if (this.props.modal.modalType === 'DELETE_POST') {\n      return <DeletePostModal modalProps={this.props.modal.modalProps} />;\n    } else if (this.props.modal.modalType === 'SHOW_CREATE_TODO') {\n      return <TodoCreate />;\n    } else if (this.props.modal.modalType === 'CHANGE_TODO') {\n      return <ChangeTodoModal modalProps={this.props.modal.modalProps} />;\n    }\n  };\n\n  handleOutsideClick = e => {\n    if (!this.node.contains(e.target)) this.handleClick();\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.modal.modalType ? (\n          <div\n            className=\"modalBackground\"\n            ref={node => {\n              this.node = node;\n            }}\n          >\n            <div className=\"modal-content\">{this.renderTypeModal()}</div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    modal: state.modal,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(ModalRoot);\n","import React from 'react';\nimport ModalRoot from '../components/ModalRoot';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { todoById, changeById } from '../store/actions/todos';\nimport { showModal } from '../store/actions/modal';\n\nclass EditPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoTitle: '',\n      arr: [],\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.todoById(this.props.match.params.id);\n      this.setState({\n        todoTitle: this.props.todoId.title,\n        arr: this.props.todoId.todosList,\n      });\n    });\n  }\n\n  handleChangeTitle(event) {\n    this.setState({\n      todoTitle: event.target.value,\n    });\n  }\n\n  addTodoItem = () => {\n    this.setState({\n      arr: [\n        ...this.state.arr,\n        {\n          name: '',\n          completed: false,\n        },\n      ],\n    });\n  };\n\n  handleChange = (e, index) => {\n    const newState = this.state.arr;\n    newState[index].name = e.target.value;\n    this.setState({\n      arr: newState,\n    });\n  };\n\n  handleRemove = index => {\n    this.state.arr.splice(index, 1);\n    this.setState({\n      arr: [...this.state.arr],\n    });\n  };\n\n  checkItem = (completed, index) => {\n    const newState = this.state.arr;\n    newState[index].completed = !completed;\n    this.setState({\n      arr: newState,\n    });\n  };\n\n  handleSave() {\n    this.props.changeById(\n      this.props.todoId.id,\n      this.state.todoTitle,\n      this.state.arr,\n    );\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Link to=\"/\">Вернуться</Link>\n        <h1>Изменить заметку</h1>\n        <input\n          value={this.state.todoTitle}\n          onChange={e => this.handleChangeTitle(e)}\n        />\n        {this.state.arr.map((todo, index) => {\n          const cls = ['todoCheck'];\n          if (todo.completed) {\n            cls.push('completed');\n          }\n          return (\n            <div className={cls.join(' ')} key={index}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={() => this.checkItem(todo.completed, index)}\n                />\n                <div></div>\n              </label>\n              <input\n                type=\"text\"\n                placeholder=\"Task\"\n                onChange={e => this.handleChange(e, index)}\n                value={todo.name}\n              />\n              <button onClick={() => this.handleRemove(index)}>Remove</button>\n            </div>\n          );\n        })}\n        <button onClick={this.addTodoItem}>Add checkbox</button>\n        <div>\n          <button\n            onClick={() => {\n              this.props.showModal('CHANGE_TODO', {\n                id: this.props.todoId.id,\n                title: this.state.todoTitle,\n                todosList: this.state.arr,\n              });\n            }}\n          >\n            Сохранить\n          </button>\n          <Link to=\"/\">\n            <button>Отмена</button>\n          </Link>\n        </div>\n        <ModalRoot />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todoId: state.todos.todo,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    todoById: id => dispatch(todoById(id)),\n    changeById: (id, title, todosList) => {\n      dispatch(changeById(id, title, todosList));\n    },\n    showModal: (modalType, modalProps) => {\n      dispatch(showModal(modalType, modalProps));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(EditPost);\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport DeletePostModal from './DeletePostModal';\nimport TodoCreate from '../TodoCreate';\nimport ChangeTodoModal from './ChangeTodoModal';\nimport { connect } from 'react-redux';\nimport { hideModal } from '../store/actions/modal';\n\nconst Modal = props => {\n  const modal = useRef(null);\n\n  const handleKeyUp = useCallback(\n    e => {\n      const keys = {\n        27: () => {\n          e.preventDefault();\n          props.hideModal();\n          window.removeEventListener('keyup', handleKeyUp, false);\n        },\n      };\n\n      if (keys[e.keyCode]) {\n        keys[e.keyCode]();\n      }\n    },\n    [props],\n  );\n\n  const handleOutsideClick = useCallback(\n    e => {\n      if (modal) {\n        if (!modal.current.contains(e.target)) {\n          props.hideModal();\n          document.removeEventListener('click', handleOutsideClick, false);\n        }\n      }\n    },\n    [props],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyUp, false);\n    document.addEventListener('click', handleOutsideClick, false);\n\n    return () => {\n      window.removeEventListener('keyup', handleKeyUp, false);\n      document.removeEventListener('click', handleOutsideClick, false);\n    };\n  }, [handleKeyUp, handleOutsideClick]);\n\n  const renderTypeModal = () => {\n    if (props.modalData.modalType === 'DELETE_POST') {\n      return <DeletePostModal modalProps={props.modalData.modalProps} />;\n    } else if (props.modalData.modalType === 'SHOW_CREATE_TODO') {\n      return <TodoCreate />;\n    } else if (props.modalData.modalType === 'CHANGE_TODO') {\n      return <ChangeTodoModal modalProps={props.modalData.modalProps} />;\n    }\n  };\n\n  return (\n    <div className=\"modalBackground\">\n      <div className=\"modal-content\" ref={modal}>\n        <button\n          type=\"button\"\n          className=\"closeButton\"\n          onClick={props.hideModal}\n        />\n        {renderTypeModal()}\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    modalData: state.modal,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    hideModal: () => dispatch(hideModal()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(Modal);\n","import React, { useEffect } from 'react';\nimport Main from './pages/Main';\nimport EditPost from './pages/EditPost';\nimport Modal from './components/Modal';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { localstorageGet } from './store/actions/todos';\n\nfunction App(props) {\n  useEffect(() => {\n    if (window.localStorage.getItem('todoItem') !== null) {\n      const todos = Array.from(\n        JSON.parse(window.localStorage.getItem('todoItem')),\n      );\n      props.localstorageGet(todos);\n    }\n    // eslint-disable-next-line\n  }, []); \n\n  return (\n    <>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/todo/:id\" exact component={EditPost} />\n      {props.modalData.modalType ? <Modal /> : null}\n    </>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todosArray: state.todos.todosArray,\n    modalData: state.modal,\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    localstorageGet: todos => dispatch(localstorageGet(todos)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(App);\n","/* eslint-disable indent */\nimport {\n  ADD_TODO_ITEM,\n  REMOVE_TODO_ITEM,\n  LOCALSTORAGE_GET,\n  LOCALSTORAGE_SET,\n  CHECK_ITEM,\n  TODO_BY_ID,\n  CHANGE_BY_ID,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  todosArray: [],\n  todo: {},\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOCALSTORAGE_GET:\n      return {\n        ...state,\n        todosArray: action.localTodos,\n      };\n    case TODO_BY_ID:\n      return {\n        ...state,\n        todo: state.todosArray.filter(\n          element => element.id === Number(action.byId),\n        )[0],\n      };\n    case ADD_TODO_ITEM:\n      return {\n        ...state,\n        todosArray: [\n          ...state.todosArray,\n          {\n            id: Date.now(),\n            title: action.todosTitle,\n            todosList: action.todosList,\n          },\n        ],\n      };\n    case CHECK_ITEM: {\n      return {\n        ...state,\n        todosArray: state.todosArray.map(item => {\n          if (item.id === action.id) {\n            item.todosList.map((itemCheck, index) => {\n              if (index === action.index) {\n                itemCheck.completed = !itemCheck.completed;\n              }\n              return itemCheck;\n            });\n          }\n          return item;\n        }),\n      };\n    }\n    case REMOVE_TODO_ITEM:\n      return {\n        ...state,\n        todosArray: state.todosArray.filter(\n          element => element.id !== action.id,\n        ),\n      };\n    case CHANGE_BY_ID:\n      console.log(action.todosList);\n      return {\n        ...state,\n        todosArray: state.todosArray.map(element => {\n          if (element.id === Number(action.id)) {\n            element.title = action.title;\n            element.todosList = action.todosList;\n          }\n          return element;\n        }),\n      };\n    case LOCALSTORAGE_SET:\n      window.localStorage.setItem('todoItem', JSON.stringify(state.todosArray));\n      return state;\n    default:\n      return state;\n  }\n}\n","/* eslint-disable indent */\n\nimport { SHOW_MODAL, HIDE_MODAL } from '../actions/actionTypes';\n\nconst initialState = {\n  modalType: null,\n  modalProps: {},\n};\n\nexport default function modal(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        modalType: action.modalType,\n        modalProps: action.modalProps,\n      };\n    case HIDE_MODAL:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport todosReducer from './todos';\nimport modalReducer from './modal';\n\nexport default combineReducers({\n  todos: todosReducer,\n  modal: modalReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nconst app = (\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}